# This workflow will build a MuleSoft project and deploy to CloudHub2.0

name: Build and Deploy to DEV

on:
  workflow_dispatch:
    
jobs:
  build:
    environment: DEV
    runs-on: ubuntu-latest
    
    steps:
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
          
    - name: Create .m2 folder
      run: mkdir -p ~/.m2

    - name: Copy settings.xml to .m2 folder
      run: cp settings.xml ~/.m2/settings.xml

    - name: Build with Maven

      env:
        CLIENTID: ${{ secrets.ANYPOINT_PLATFORM_USERNAME }}
        CLIENTSECRET: ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}
        ENVCLIENT: ${{ secrets.ENVIRONMENT_CLIENT_ID }}
        ENVSECRET: ${{ secrets.ENVIRONMENT_CLIENT_SECRET }}
        #SECUREKEY: ${{ secrets.SECUREKEY }}
        ENVIRONMENT: ${{ vars.ENV }}
        TARGET: ${{ vars.TARGET }}
        DEPLOYMENTENV: ${{ vars.DEPLOYMENT_ENV }}
      run: mvn -B package --file pom.xml --settings ~/.m2/settings.xml -Denv="$ENVIRONMENT" -Dtarget="$TARGET" -Ddeployment.env="$DEPLOYMENTENV" -Danypoint.client_id="$ENVCLIENT" -Danypoint.client_secret="$ENVSECRET" -DskipTests=true -DconnectedAppClientId="$CLIENTID" -DconnectedAppClientSecret="$CLIENTSECRET"  #-Dkey="$SECUREKEY"
   
    - name: Publish to Exchange
      env:
        CLIENTID: ${{ secrets.ANYPOINT_PLATFORM_USERNAME }}
        CLIENTSECRET: ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}
        ENVCLIENT: ${{ secrets.ENVIRONMENT_CLIENT_ID }}
        ENVSECRET: ${{ secrets.ENVIRONMENT_CLIENT_SECRET }}
        #SECUREKEY: ${{ secrets.SECUREKEY }}
        TARGET: ${{ vars.TARGET }}
        appEnvironment: ${{ vars.ENV }}
        DEPLOYMENTENV: ${{ vars.DEPLOYMENT_ENV }}

      run: |
        artifactName=$(ls *.jar | head -1)
        mvn -e  deploy --settings settings.xml \
         -Danypoint.client_id="$ENVCLIENT" \
         -Danypoint.client_secret="$ENVSECRET" \
         -Dtarget="$TARGET" \
         -Denv="$appEnvironment" \
         -Ddeployment.env="$DEPLOYMENTENV" \
         -DconnectedAppClientId="$CLIENTID" \
         -DconnectedAppClientSecret="$CLIENTSECRET" \
   
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
        
  deploy:
    environment: DEV
    needs: build
    runs-on: ubuntu-latest

    steps:    
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to DEV
      env:
        CLIENTID: ${{ secrets.ANYPOINT_PLATFORM_USERNAME }}
        CLIENTSECRET: ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}
        ENVCLIENT: ${{ secrets.ENVIRONMENT_CLIENT_ID }}
        ENVSECRET: ${{ secrets.ENVIRONMENT_CLIENT_SECRET }}
        #SECUREKEY: ${{ secrets.SECUREKEY }}
        appEnvironment: ${{ vars.ENV }}
        DEPLOYMENTENV: ${{ vars.DEPLOYMENT_ENV }}
        TARGET: ${{ vars.TARGET }}
      
      run: |
        artifactName=$(ls *.jar | head -1)
        appNameCloudhub=gf-${artifactName}-dev
        mvn -e  deploy -DmuleDeploy \
         -Dmule.artifact="$artifactName" \
         -Dtarget="$TARGET" \
         -Denv="$appEnvironment" \
         -Ddeployment.env="$DEPLOYMENTENV" \
         -DconnectedAppClientId="$CLIENTID" \
         -DconnectedAppClientSecret="$CLIENTSECRET" \
         -Danypoint.client_id="$ENVCLIENT" \
         -Danypoint.client_secret="$ENVSECRET" \
         -DskipTests=true \
