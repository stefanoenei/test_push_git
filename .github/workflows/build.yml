name: Build & Deploy to Develop

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Create .m2 folder
      run: mkdir -p ~/.m2

    - name: Copy settings.xml to .m2 folder
      run: cp settings.xml ~/.m2/settings.xml

    - name: Insert username into settings.xml
      run: sed -i 's/ANYPOINT_PLATFORM_USERNAME/${{ secrets.ANYPOINT_PLATFORM_USERNAME }}/g' ~/.m2/settings.xml

    - name: Insert password into settings.xml
      run: sed -i 's/ANYPOINT_PLATFORM_PASSWORD/${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}/g' ~/.m2/settings.xml

    - name: Package and deploy to Exchange
      run: mvn clean deploy --settings ~/.m2/settings.xml

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: 
      name: Dev

    steps:    

    - uses: actions/checkout@v3

    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts

    - name: Deploy to Development
      env:
        CLIENTID: ${{ secrets.ANYPOINT_PLATFORM_USERNAME }}
        CLIENTSECRET: ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}
        GRANTTYPE: "client_credentials"
        #secureKey: ${{ secrets.ANYPOINT_ENCRYPTIONKEY }}
        CLIENT_ID_ENVIRONMENT: ${{ secrets.ENVIRONMENT_CLIENT_ID }}
        CLIENT_SECRET_ENVIRONMENT: ${{ secrets.ENVIRONMENT_CLIENT_SECRET }}
        ORGANIZATION: "gruppo-florence"
        appEnvironment: "DEV"
        DEPLOY_ENVIRONMENT: "DEV"
        MULE_RUNTIME_VERSION: "4.9"
        stconcate: "-"
        replicas: "1"
        vCores: "0.1"
        target: "Cloudhub-EU-Central-1"

      run: |
        artifactFile=$(ls *.jar | head -1)
        artifactBase=${artifactFile%.jar}
        artifactId=$(echo "$artifactBase" | sed -E 's/-[0-9]+.*$//')
        appName="gf-${artifactId}-$(echo "$appEnvironment" | tr '[:upper:]' '[:lower:]')"
        
        echo "Artifact file: $artifactFile"
        echo "Artifact ID: $artifactId"
        echo "App Name: $appName"
        
        artifactName=$(ls *.jar | head -1)
        appNameCloudhub=gf-${artifactName}-dev
        mvn -e -X deploy -DmuleDeploy \
          -Dmule.artifact="$artifactFile" \
          -DclientId="$CLIENTID" \
          -DclientSecret="$CLIENTSECRET" \
          -DgrantType="$GRANTTYPE" \
          -DbusinessGroup="$ORGANIZATION" \
          -DmuleRuntime="$MULE_RUNTIME_VERSION" \
          -Denvironment="$appEnvironment" \
          -Denv="$DEPLOY_ENVIRONMENT" \
          -DapplicationName="$appName" \
          -Dreplicas="$replicas" \
          -DvCores="$vCores" \
          -Dtarget="$target" \
          -DskipTests
