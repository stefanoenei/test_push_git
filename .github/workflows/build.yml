name: Build & Deploy to Develop

on:
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Create .m2 folder
      run: mkdir -p ~/.m2

    - name: Copy settings.xml to .m2 folder
      run: cp settings.xml ~/.m2/settings.xml

    - name: Insert username into settings.xml
      run: sed -i 's/ANYPOINT_PLATFORM_USERNAME/${{ secrets.ANYPOINT_PLATFORM_USERNAME }}/g' ~/.m2/settings.xml

    - name: Insert password into settings.xml
      run: sed -i 's/ANYPOINT_PLATFORM_PASSWORD/${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}/g' ~/.m2/settings.xml

    - name: Print effective-settings (optional)
      run: mvn help:effective-settings --settings ~/.m2/settings.xml
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml --settings ~/.m2/settings.xml
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: 
      name: Dev

    steps:    
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to Development
      env:
        CLIENTID: ${{ secrets.ANYPOINT_PLATFORM_USERNAME }}
        CLIENTSECRET: ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}
        GRANTTYPE: "client_credentials"
        #secureKey: ${{ secrets.ANYPOINT_ENCRYPTIONKEY }}
        CLIENT_ID_ENVIRONMENT: ${{ secrets.ENVIRONMENT_CLIENT_ID }}
        CLIENT_SECRET_ENVIRONMENT: ${{ secrets.ENVIRONMENT_CLIENT_SECRET }}
        ORGANIZATION: "gruppo-florence"
        appEnvironment: "DEV"
        DEPLOY_ENVIRONMENT: "DEV"
        MULE_RUNTIME_VERSION: "4.6-java17"
        stconcate: "-"
        replicas: "1"
        vCores: "0.1"
      
      run: |
        artifactName=$(ls *.jar | head -1)
        appName=$(ls *.jar | head -1 | cut -d "-" -f 1,2,3)
        appNameCloudhub=${appName}
        mvn -e -X deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -DclientId="$CLIENTID" \
         -DclientSecret="$CLIENTSECRET" \
         -DgrantType="$GRANTTYPE" \
         -DbusinessGroup="$ORGANIZATION" \
         -DmuleRuntime="$MULE_RUNTIME_VERSION" \
         -Denvironment="$appEnvironment" \
         -Denv="$DEPLOY_ENVIRONMENT" \
         -DapplicationName="$appNameCloudhub" \
         -Dreplicas="$replicas" \
         -DvCores="$vCores" \
         -DskipTests
